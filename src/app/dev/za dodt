
const [testDuration, setTestDuration] = useState < string > ("00:00:00")
useEffect(() => {
    if (!startTime) return

    const updateDuration = () => {
        const now = new Date()
        const diffMs = now.getTime() - startTime.getTime()

        // Convert to hours, minutes, seconds
        const hours = Math.floor(diffMs / (1000 * 60 * 60))
        const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60))
        const seconds = Math.floor((diffMs % (1000 * 60)) / 1000)

        setTestDuration(
            `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`,
        )
    }

    updateDuration()
    const interval = setInterval(updateDuration, 1000)

    return () => clearInterval(interval)
}, [startTime])

const [testStartTime] = useState(new Date()) // Track when testing started